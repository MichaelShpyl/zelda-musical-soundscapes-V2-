name: CI  # Name of the GitHub Actions workflow

on:
  # Trigger this workflow on pushes to the main or feature branches
  push:
    branches: [ main, feature/* ]
  # Trigger this workflow for pull requests targeting the main branch
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment for the job

    steps:
      # Step 1: Check out the repository to the runner
      - name: Check out code
        uses: actions/checkout@v2  # Standard GitHub Action for repository checkout

      # Step 2: Set up a Python environment for the pipeline
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify the Python version to use

      # Step 3: Install dependencies for testing, linting, and documentation
      - name: Install dependencies
        run: |
          pip install pytest pdoc cfn-lint awscli bandit
        # These tools are used for testing, generating documentation, and security analysis

      
      # Step 7: Perform a security scan using Bandit
      - name: Security scan with Bandit
        run: bandit -r soundscapes tests
        # Bandit scans Python files in the soundscapes and tests directories for vulnerabilities

      # Step 8: Build and test Java code using Maven (if applicable)
      - name: Build and test (Maven)
        run: mvn clean test
        # This step ensures Java-based components are built and tested

      # Step 9: Run unit and performance tests with pytest
      - name: Run tests (unit + performance)
        run: pytest
        # pytest is used for running both unit and performance tests

      # Step 10: Generate HTML documentation using pdoc
      - name: Generate docs
        run: pdoc soundscapes --output-dir docs
        # pdoc generates up-to-date API documentation for the project

      # Step 11: Archive the generated documentation as a build artifact
      - name: Upload docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs
        # The documentation is stored as an artifact for future reference
